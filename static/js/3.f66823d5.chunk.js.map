{"version":3,"sources":["components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-sign-up/sign-in-and-sign-up.component.jsx"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","SignIn","props","handleSubmit","event","a","preventDefault","state","email","password","emailSignInStart","target","name","setState","this","googleSignInStart","onSubmit","type","required","autoComplete","onClick","isgooglesignin","React","Component","connect","dispatch","SignUp","displayName","confirmPassword","signUpStart","alert","userCredentials","SignInAndSignUpPage"],"mappings":"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","file":"static/js/3.f66823d5.chunk.js","sourcesContent":["import React from 'react';\n\nimport './form-input.styles.scss';\n\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className='group'>\n    <input className='form-input' onChange={ handleChange } { ...otherProps } />\n    { label\n      ? (\n        <label\n          className={`${\n            otherProps.value.length ? 'shrink' : ''\n            } form-input-label`}\n        >\n          { label }\n        </label>\n      )\n      : null }\n  </div>\n);\n\n\nexport default FormInput;\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport { googleSignInStart, emailSignInStart } from \"store/user/user.action\";\n\nimport FormInput from 'components/form-input/form-input.component';\nimport CustomButton from 'components/custom-button/custom-button.component';\n\nimport './sign-in.styles.scss';\n\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\t\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\t\n\t\tconst { email, password } = this.state;\n\t\tconst { emailSignInStart } = this.props;\n\t\t\n\t\temailSignInStart(email, password)\n\t};\n\t\n\thandleChange = event => {\n\t\tconst { value, name } = event.target;\n\t\t\n\t\tthis.setState({ [name]: value });\n\t};\n\t\n\trender() {\n\t\tconst { email, password } = this.state;\n\t\tconst { googleSignInStart } = this.props;\n\t\t\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account</h2>\n\t\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\t\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\thandleChange={ this.handleChange }\n\t\t\t\t\t\tvalue={ email }\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\thandleChange={ this.handleChange }\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\tautoComplete=\"on\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* google button for firebase auth service */}\n\t\t\t\t\t\t<CustomButton onClick={ googleSignInStart } isgooglesignin=\"true\">\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\n\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport { signUpStart } from 'store/user/user.action';\n\nimport FormInput from 'components/form-input/form-input.component';\nimport CustomButton from 'components/custom-button/custom-button.component';\n\nimport './sign-up.styles.scss';\n\n\nclass SignUp extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\tdisplayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t};\n\t}\n\t\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\t\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\n\t\tconst { signUpStart } = this.props;\n\t\t\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"passwords don't match\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\t\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\t\n\t\tthis.setState({ [name]: value });\n\t};\n\t\n\trender() {\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\n\t\t\n\t\treturn (\n\t\t\t<div className='sign-up'>\n\t\t\t\t<h2 className='title'>I do not have a account</h2>\n\t\t\t\t<span>Sign up with your email and password</span>\n\t\t\t\t\n\t\t\t\t<form className='sign-up-form' onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='displayName'\n\t\t\t\t\t\tvalue={ displayName }\n\t\t\t\t\t\tonChange={ this.handleChange }\n\t\t\t\t\t\tlabel='Display Name'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={ email }\n\t\t\t\t\t\tonChange={ this.handleChange }\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tonChange={ this.handleChange }\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\tautoComplete=\"on\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\tvalue={ confirmPassword }\n\t\t\t\t\t\tonChange={ this.handleChange }\n\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\tautoComplete=\"on\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from 'react';\n\nimport SignIn from 'components/sign-in/sign-in.component';\nimport SignUp from 'components/sign-up/sign-up.component';\n\nimport './sign-in-and-sign-up.styles.scss';\n\n\nconst SignInAndSignUpPage = () => (\n  <div className='sign-in-and-sign-up'>\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}